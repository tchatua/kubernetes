apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  # This define which pods are going to be represented by this service
  # The service become a network endpoint for either services
  # or maybe external users to connect to (e.g. browsers)
  selector:
    app: queue
  ports:
    - name: queue
      port: 8161
      nodePort: 30010

    - name: endpoint # Internally to the cluster
      port: 61616

  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-position-tracker
spec:
  # This define which pods are going to be represented by this service
  # The service become a network endpoint for either services
  # or maybe external users to connect to (e.g. browsers)
  selector:
    app: position-tracker
  ports:
    - name: http
      port: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
spec:
  # This define which pods are going to be represented by this service
  # The service become a network endpoint for either services
  # or maybe external users to connect to (e.g. browsers)
  selector:
    app: api-gateway
  ports:
    - name: http
      port: 8080
      # nodePort: 30020
  type: ClusterIP  
  # type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp
spec:
  # This define which pods are going to be represented by this service
  # The service become a network endpoint for either services
  # or maybe external users to connect to (e.g. browsers)
  selector:
    app: webapp
  ports:
    - name: http
      port: 80
      nodePort: 30080
  type: NodePort
